program     → declaration* EOF ;

declaration → letDecl
            | statement ;

statement   → assignment
            | exprStmt
            | printStmt;

exprStmt  → expression ";" ;
printStmt → "print" expression ";" ;
letDecl   → "let" IDENTIFIER ( "=" expression )? ";" ;
assignment → IDENTIFIER "=" expression ";" ;

expression     → equality ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       → multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | primary ;
primary        → NUMBER | STRING | "false" | "true" | "nil"
               | "(" expression ")" ;