program     -> declaration* EOF ;

declaration -> letDecl
            | statement ;

letDecl   -> "let" IDENTIFIER ( "=" expression )? ";" ;

statement   -> assignment
            | exprStmt
            | ifStmt
            | printStmt
            | whileStmt
            | block 
            | breakStmt
            | continueStmt ;

assignment -> IDENTIFIER "=" expression ";" ;
exprStmt  -> expression ";" ;
ifStmt    -> "if" expression block ( "else" block )? ;
printStmt -> "print" expression ";" ;
whileStmt -> "while" expression block ;
block     -> "{" declaration* "}" ;
breakStmt -> "break" ;
continueStmt -> "continue" ;

expression     -> logic_or ;
logic_or       -> logic_and ( "||" logic_and )* ;
logic_and      -> equality ( "&&" equality )* ;
equality       -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison     -> addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       -> multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication -> unary ( ( "/" | "*" ) unary )* ;
unary          -> ( "!" | "-" ) unary
               | primary ;
primary        -> NUMBER | STRING | "false" | "true" | "nil"
               | "(" expression ")" ;